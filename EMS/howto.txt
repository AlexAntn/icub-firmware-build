

# Prerequisites
# Before you start you need to know some basic information on what is placed on the EMS board

      
    |   EEPROM                  |
    |---------------------------|   
    |   size = 1KB              |   
    |   partition table         |   contains information about where to bootstrap, versions of the applications etc.
    |---------------------------|   <- starts at address 0
    
                         
    |   FLASH (total size = 1MB)|
    |                           |
    |---------------------------|
    | partition-3: application  |
    | starts at:   128KB        |   contains the proper application which typically executes 5 sec after bootstrap.
    | size:        256KB        |   the file can be ems.hex or ems-v1mec.hex or even others (e.g. emsMaintainer.hex)
    |                           |
    |                           |   it may contain the emsMaintainer, which is a special program which talks to ethLoader
    |                           |   and allows to load the emsUpdater.hex into partition-2 and emsLoader.hex into partition-1
    |                           |
    |---------------------------|   <- starts at address 128KB    
    | partition-2: updater      |
    | starts at:   32KB         |   contains emsUpdater.hex which typically executes a few ms after bootstrap. 
    | size:        96KB         |   it waits for 5 seconds and if not contacted by the ethLoader it forces execution of the application.
    |                           |   if contacted by the ethLoader (or if there is nothing in the application partition)
    |                           |   it enters in updating mode, so that the ethLoader can operate (e.g., change address, load FW, etc.).
    |                           |   when in updating mode its LEDs blink at 0.5 Hz.
    |                           |   BE CAREFUL: it can load .hex files only in partition-3.
    |                           |   
    |---------------------------|   <- starts at address 32KB       
    | partition-1: loader       |
    | starts at:   0KB          |   contains emsLoader.hex which executes at bootstrap. 
    | size:        32K          |   it reads from the partition table in EEPROM which program to jump to and it executes it. 
    |                           |   if nothing is found it enters in error mode by blinking all its LEDs very quickly.
    |                           |   
    |---------------------------|   <- starts at address 0KB   
    


# Instructions  
# Here are some basic instructions for preparing and updating the FW on the EMS.

(1) First time preparation of the EMS board.

    You must have an EMS board connected to a power supply and to a ULINKpro programming device (http://www.keil.com/ulinkpro).
    Then you follow instructions in EMS/scripts/readme.txt to launch scripts which: erase FLASH and EEPROM, burn the loader into 
    partition-1 and burn the updater into partition-2 of the FLASH.
   
    After these operations the FW of the EMS board can be updated via Ethernet with the ethLoader program.  
   
    You must attach the ETH cable to the EMS, connect it to a host with address 10.0.1.104 and launch the ethLoader.
    The ethLoader will find the EMS board at the default address 10.0.1.99 and you must change the default address 
    into the chosen one (e.g., 10.0.0.1).
   
    Now the EMS can be safely mounted on the robot without giving any IP address conflict.
    
   
(2) Installation of the application FW

    Launch the ethLoader, start a discovery and repeat it until the chosen EMS runs the updater program.
    Load the relevant ems.hex file from the EMS/bin/application/ folder. Use ems-v1mec.hex only if the robot is iCubGenova04.
    From ethLoader force the "boot from application" mode. With this mode, the EMS board will execute the ems.hex application
    after 5 seconds from bootstrap.
   
(3) Update of the application FW 

    The application FW EMS/bin/application/ems.hex (ems-v1mec.hex) is likely to change often in the life of the robot.
   
    You can verify which FW version the robot is running by launching a discovery procedure with ethLoader: select a given EMS
    board, click the "PROCS" button and look at the results in the window on the right.
   
    You can see what is the latest FW version of the EMS by the following commands:
    -   make sure the repository is updated:
        ..../icub-firmware-build> git pull --rebase
    -   read the log of ems.hex file
        ..../icub-firmware-build> git log --follow EMS/bin/application/ems.hex
      
    If the FW version on the EMS board is older than the one in repository then a update is recommended.
   
    To update the application FW you can operate as in point (2).

   
(4) Update of the updater FW    
   
   The emsUpdater is a complex program which uses UDP communication to talk to the ethLoader and to the canLoader.
   Hence, it may need some changes in its lifetime.
   
   You can update the FW of the updater in partition-2 by following these steps
   (a)  launch the ethLoader and put the EMS to execute the updater program.
   (b)  load the special application  EMS/bin/environment/emsMaintainer.hex
   (c)  send a reset command to the board and wait for at least 5 seconds. if you perform a new discovery and request
        the PROCS to the board, the ethLoader will show that the special application emsMaintainer is executing.
   (d)  load the new EMS/bin/environment/emsUpdater.hex with the button "LOAD UPDATER".
   (e)  now verify that the new updater can safely execute by clicking "JUMP TO UPDATER". if the PROCS command
        shows that the new updater runs and responds to the ethLoader you send the BOOT_FROM_UPDATER command and then
        the RESET command.  
   (f)  launch a new discovery and look at if the updater executes.
   (g)  now load in the application partition-3 the EMS/bin/application/ems.hex file and send command BOOT_FROM_APP so that 
        the normal behaviour is restored. 

(4) Update of the loader FW    
   
   You can update also the loader FW in the partion-1, even if  you need to do so very rarely.
   
   You can update the FW of the loader in partition-1 by following these steps
   (a)  launch the ethLoader and put the EMS to execute the updater program.
   (b)  load the EMS/bin/environment/emsLoader.hex
   (c)  send a PROCS command to the board to verify the correct programming of the new loader.
   (d)  send a RESET command and launch a new discovery to verify once more.  
                            